// <auto-generated />
using System;
using System.Text.Json;
using Distvisor.Infrastructure.Persistence.App;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Distvisor.Infrastructure.Persistence.App.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("app")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Distvisor.App.HomeBox.Entities.DeviceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("GatewayDeviceId")
                        .HasColumnType("text");

                    b.Property<string>("Header")
                        .HasColumnType("text");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<JsonDocument>("Params")
                        .HasColumnType("jsonb");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeboxDevices");
                });

            modelBuilder.Entity("Distvisor.App.HomeBox.Entities.GatewaySessionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("LastModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("HomeboxGatewaySessions");
                });

            modelBuilder.Entity("Distvisor.App.HomeBox.Entities.GatewaySessionEntity", b =>
                {
                    b.OwnsOne("Distvisor.App.HomeBox.ValueObjects.GatewayToken", "Token", b1 =>
                        {
                            b1.Property<Guid>("GatewaySessionEntityId")
                                .HasColumnType("uuid");

                            b1.Property<string>("AccessToken")
                                .HasColumnType("text")
                                .HasColumnName("AccessToken");

                            b1.Property<DateTimeOffset>("GeneratedAt")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("TokenGeneratedAt");

                            b1.Property<string>("RefreshToken")
                                .HasColumnType("text")
                                .HasColumnName("RefreshToken");

                            b1.HasKey("GatewaySessionEntityId");

                            b1.ToTable("HomeboxGatewaySessions");

                            b1.WithOwner()
                                .HasForeignKey("GatewaySessionEntityId");
                        });

                    b.Navigation("Token");
                });
#pragma warning restore 612, 618
        }
    }
}
