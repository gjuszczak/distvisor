// <auto-generated />
using System;
using System.Text.Json;
using Distvisor.Web.Data.Reads.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Distvisor.Web.Data.Reads.Migrations
{
    [DbContext(typeof(ReadStoreContext))]
    [Migration("20210627063310_AddHomeboxTables")]
    partial class AddHomeboxTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.FinancialAccountEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTimeUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("FinancialAccounts");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.FinancialAccountTransactionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("PostingDate")
                        .HasColumnType("DATE");

                    b.Property<long>("SeqNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("DATE");

                    b.Property<string>("TransactionHash")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TransactionHash")
                        .IsUnique();

                    b.HasIndex("AccountId", "SeqNo")
                        .IsUnique();

                    b.ToTable("FinancialAccountTransactions");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerActionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool?>("IsDeviceOn")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeviceOnline")
                        .HasColumnType("boolean");

                    b.Property<int?>("LastExecutedActionMaxDelayMs")
                        .HasColumnType("integer");

                    b.Property<int?>("LastExecutedActionMinDelayMs")
                        .HasColumnType("integer");

                    b.Property<int?>("LastExecutedActionNumber")
                        .HasColumnType("integer");

                    b.Property<JsonElement>("Payload")
                        .HasColumnType("jsonb");

                    b.Property<Guid>("TriggerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TriggerId");

                    b.ToTable("HomeboxTriggerActions");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Enabled")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("HomeboxTriggers");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerSourceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MatchParam")
                        .HasColumnType("text");

                    b.Property<Guid>("TriggerId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TriggerId");

                    b.ToTable("HomeboxTriggerSources");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerTargetEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DeviceIdentifier")
                        .HasColumnType("text");

                    b.Property<Guid>("TriggerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TriggerId");

                    b.ToTable("HomeboxTriggerTargets");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.RedirectionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Redirections");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.SecretsVaultEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Key")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("SecretsVault");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.FinancialAccountTransactionEntity", b =>
                {
                    b.HasOne("Distvisor.Web.Data.Reads.Entities.FinancialAccountEntity", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerActionEntity", b =>
                {
                    b.HasOne("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerEntity", "Trigger")
                        .WithMany("Actions")
                        .HasForeignKey("TriggerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trigger");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerSourceEntity", b =>
                {
                    b.HasOne("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerEntity", "Trigger")
                        .WithMany("Sources")
                        .HasForeignKey("TriggerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trigger");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerTargetEntity", b =>
                {
                    b.HasOne("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerEntity", "Trigger")
                        .WithMany("Targets")
                        .HasForeignKey("TriggerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trigger");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.FinancialAccountEntity", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Distvisor.Web.Data.Reads.Entities.HomeBoxTriggerEntity", b =>
                {
                    b.Navigation("Actions");

                    b.Navigation("Sources");

                    b.Navigation("Targets");
                });
#pragma warning restore 612, 618
        }
    }
}
